# -*- coding: utf-8 -*-
"""Untitled54.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tX_iYiXppPAf9Jd6_VZ24KJgiVW8ywph
"""

import pandas as pd
import os

# List of required files
file_names = [
    "Final Economic_Indicators_Formatted.csv",
    "Final Social_Indicators_Formatted.csv",
    "Final Environmental_Indicators_Formatted.csv",
    "Final Statistical_Indicators_Formatted.csv",
    "Complete_Public_Debt_Indicators.csv",
    "Countries_Normalized (2).csv"
]

# Ensure files exist before loading
file_paths = {name: f"/content/{name}" for name in file_names if os.path.exists(f"/content/{name}")}

if not file_paths:
    print("Files not found! Please upload them in the Colab Files panel.")

# Load CSV files
dataframes = {name: pd.read_csv(path, dtype=str, encoding="utf-8") for name, path in file_paths.items()}

# Select main dataset
df_economic = dataframes.get("Final Economic_Indicators_Formatted.csv")
df_social = dataframes.get("Final Social_Indicators_Formatted.csv")
df_environmental = dataframes.get("Final Environmental_Indicators_Formatted.csv")
df_statistical = dataframes.get("Final Statistical_Indicators_Formatted.csv")
df_public_debt = dataframes.get("Complete_Public_Debt_Indicators.csv")
df_countries = dataframes.get("Countries_Normalized (2).csv")

# Initialize merged dataset with economic indicators
merged_df = df_economic.copy()

# Function to rename duplicate columns before merging
def rename_columns(df, dataset_name):
    df = df.rename(columns={col: f"{col}_{dataset_name}" for col in df.columns if col not in ["Country Code", "Country Name"]})
    return df

# Rename columns for merging
df_social = rename_columns(df_social, "social") if df_social is not None else None
df_environmental = rename_columns(df_environmental, "env") if df_environmental is not None else None
df_statistical = rename_columns(df_statistical, "stats") if df_statistical is not None else None
df_public_debt = rename_columns(df_public_debt, "debt") if df_public_debt is not None else None

# Merge datasets on "Country Code"
for df in [df_social, df_environmental, df_statistical, df_public_debt]:
    if df is not None:
        merged_df = merged_df.merge(df, on=["Country Code", "Country Name"], how="outer")

# Merge with country names dataset
if df_countries is not None:
    merged_df = merged_df.merge(df_countries, left_on="Country Code", right_on="Country_ID", how="left")

# Save the merged dataset
merged_df.to_csv("Merged_Global_Indicators.csv", index=False)

# Display preview of merged dataset
print("Merged Dataset Preview:")
print(merged_df.head())

from google.colab import files
files.download("Merged_Global_Indicators.csv")